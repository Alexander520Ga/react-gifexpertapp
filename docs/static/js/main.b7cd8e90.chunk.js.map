{"version":3,"sources":["Components/AddCategoryComponent.tsx","helpers/getGifs.tsx","Components/GifGridItem.tsx","Components/GifGrid.tsx","hooks/useFetchGifs.tsx","GifExpertApp.tsx","index.tsx"],"names":["AddCategoryComponent","props","setCategories","useState","InputValue","setInputValue","action","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","className","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","src","alt","GifGrid","loading","State","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertComponent","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"2MA2BeA,EAtBe,SAACC,GAA0B,IAC5CC,EAAgBD,EAAhBC,cAD2C,EAGlBC,mBAAS,IAHS,mBAG/CC,EAH+C,KAGnCC,EAHmC,KAgBpD,OACC,sBAAMC,OAAO,GAAGC,SARE,SAACC,GAChBA,EAAEC,iBACCL,EAAWM,OAAOC,OAAS,IAC9BT,GAAc,SAACU,GAAD,OAAcR,GAAd,mBAA4BQ,OAC1CP,EAAc,MAIjB,SACG,uBAAOQ,KAAK,OAAOC,MAAOV,EAAYW,SAblB,SAACP,GACtBH,EAAcG,EAAEQ,OAAOF,QAY6CG,UAAU,SAASC,YAAY,kB,+BCP3FC,EAfF,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACLC,EADK,iDACyCC,UAAUH,GADnD,+DAEGI,MAAMF,GAFT,cAETG,EAFS,gBAGKA,EAAKC,OAHV,uBAGRC,EAHQ,EAGRA,KACDC,EAAKD,EAAKE,KAAI,SAACC,GAAY,IAAD,EAC5B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,UAAUZ,QARnB,kBAaRM,GAbQ,4CAAF,sDCUEO,EATM,SAAC,GAAqB,IAApBH,EAAmB,EAAnBA,MAAMV,EAAa,EAAbA,IAEzB,OACI,qBAAML,UAAU,8CAAhB,SACC,qBAAKmB,IAAKd,EAAKe,IAAKL,OCwBVM,EA1BE,SAAC,GAAoB,IAAnBlB,EAAkB,EAAlBA,SAAkB,ECAb,SAACA,GAAkB,IAAD,EAEhBjB,mBAAS,CAC/BwB,KAAK,GACLY,SAAQ,IAJ8B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAsB1C,OAhBAC,qBAAU,WAENvB,EAAQC,GAEPuB,MAAK,SAACC,GACHC,YAAW,WAEPJ,EAAS,CACLd,KAAKiB,EACLL,SAAQ,MAEb,UAGT,CAACnB,IAEIoB,EDpB2BM,CAAc1B,GAA/Ba,EAFoB,EAEzBN,KAAYY,EAFa,EAEbA,QAGpB,OACI,qCAEA,oBAAItB,UAAU,yDAAyDc,GAAG,QAA1E,SAAoFX,IAGnFmB,GAAW,mBAAGtB,UAAU,mCAAmCc,GAAG,UAAnD,wBACP,qBAAKd,UAAU,YAAf,SAELgB,EAAOJ,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,eAEHA,GADCA,EAAIC,aEaVgB,EA3BU,WAAK,IAAD,EAEY5C,mBAAS,CAAC,YAFtB,mBAEjB6C,EAFiB,KAELC,EAFK,KAQzB,OACI,qCACD,qBAAKhC,UAAU,UAAf,SACK,oBAAIA,UAAU,YAAd,8BAEI,cAAC,EAAD,CAAsBf,cAAe+C,IACzC,uBAEA,6BAEQD,EAAWnB,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAAkBA,SAAUA,GAAeA,YCnB1E8B,IAASC,OACN,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.b7cd8e90.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\ninterface ICategoryprops{\r\n    setCategories:any\r\n}\r\n const AddCategoryComponent = (props:ICategoryprops) => {\r\n     const { setCategories }=props\r\n\r\n  const [InputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleInputChange=(e:any)=>{\r\n       setInputValue(e.target.value)\r\n    }\r\n     \r\n    const handleSubmit=(e:any)=>{\r\n        e.preventDefault()\r\n        if(InputValue.trim().length > 2){\r\n        setCategories((cats:any) =>[InputValue,...cats])\r\n        setInputValue(\"\")\r\n    }\r\n}\r\n    return (\r\n     <form action=\"\" onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={InputValue} onChange={handleInputChange} className=\"search\" placeholder=\"Buscar Gif\"/>\r\n        </form>\r\n    )\r\n}\r\nexport default AddCategoryComponent","\r\nconst getGifs= async(category:any)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=JsG2dGGwLVBn0Ix1tYSm6RzKB76dr1L7`\r\nconst resp= await fetch(url)\r\nconst {data}= await resp.json()\r\nconst gifs=data.map((img:any) =>{\r\n    return {\r\n        id:img.id ,\r\n        title:img.title,\r\n        url:img.images?.downsized.url\r\n    }\r\n})\r\n\r\n\r\nreturn gifs\r\n}\r\nexport default getGifs","import React from 'react'\r\n\r\n const GifGridItem = ({title,url}:any) => {\r\n     \r\n    return (\r\n        <div  className=\"card animate__animated animate__rubberBand \">\r\n         <img src={url} alt={title}/>\r\n         \r\n        </div>\r\n    )\r\n}\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\n     const GifGrid = ({category}:any) => {\r\n        //con los dos puntitos se renombra\r\n         const {data:images,loading}= useFetchGifs( category )\r\n\r\n\r\n        return (\r\n            <>\r\n            \r\n            <h1 className=\"animate__animated animate__bounce animate__delay-3s 3s\" id=\"title\" >{category}</h1>\r\n            \r\n            \r\n            {loading && <p className=\"animate__animated animate__flash\" id=\"loading\" >Loading...</p>}\r\n                 <div className=\"card-grid\">\r\n            {\r\n            images.map((img:any)=>{\r\n                return <GifGridItem \r\n                key={img.id} \r\n                {...img} />\r\n        })\r\n             }\r\n     \r\n            </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n    export default GifGrid","import { useEffect, useState } from \"react\"\r\nimport getGifs from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = (category:any) => {\r\n  \r\n    const [State, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n        \r\n        .then((imgs)=>{\r\n            setTimeout(() => {\r\n              \r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            }, 3000);\r\n                \r\n        })\r\n    },[category])\r\n    \r\n    return State;\r\n}\r\n","import React, {useState} from \"react\";\r\nimport AddCategoryComponent from \"./Components/AddCategoryComponent\"\r\nimport GifGridComponent from \"./Components/GifGrid\";\r\n\r\n\r\n\r\nconst GifExpertComponent=()=>{\r\n\r\n     const [categories, setcategories] = useState([\"Windows\"])\r\n\r\n    // const handleAdd=()=>{\r\n    //     setcategories([...categories,\"hunderXhunder\"])\r\n    // }\r\n\r\n    return(\r\n        <>\r\n       <div className=\"headIMG\">\r\n            <h1 className=\"GifExpert\" >Gif Expert App</h1>\r\n            </div>\r\n                <AddCategoryComponent setCategories={setcategories} />\r\n            <hr/>\r\n           \r\n            <ol> \r\n                {\r\n                    categories.map(category=>{\r\n                        return <GifGridComponent category={category} key={category}/>\r\n                    })\r\n                }\r\n                \r\n                 </ol>\r\n        </>\r\n    )\r\n}\r\nexport default GifExpertComponent","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertComponent from \"./GifExpertApp\"\n\n\nReactDOM.render(\n   <GifExpertComponent></GifExpertComponent>,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}